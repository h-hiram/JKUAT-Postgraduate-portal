openapi: 3.0.0
info:
  title: JKUAT Postgraduate Portal API
  version: 1.0.0
  description: API documentation for the JKUAT Postgraduate Portal backend.
servers:
  - url: http://localhost:5000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, student, supervisor]
    Project:
      type: object
      properties:
        id:
          type: integer
        student_id:
          type: integer
        course_id:
          type: integer
        title:
          type: string
        status:
          type: string
    DocumentSubmission:
      type: object
      properties:
        id:
          type: integer
        project_id:
          type: integer
        phase_id:
          type: integer
        file_path:
          type: string
        description:
          type: string
    FeedbackComment:
      type: object
      properties:
        id:
          type: integer
        submission_id:
          type: integer
        supervisor_id:
          type: integer
        phase_id:
          type: integer
        comment:
          type: string
security:
  - bearerAuth: []
tags:
  - name: Auth
    description: Authentication
  - name: Users
    description: User management
  - name: Projects
    description: Project management
  - name: DocumentSubmissions
    description: Document submission management
  - name: FeedbackComments
    description: Feedback comment management
  - name: Presentations
    description: Presentation management
paths:
  /api/auth/login:
    post:
      tags: [Auth]
      summary: Login with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials
  /api/users:
    post:
      tags: [Users]
      summary: Create a new user (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created
    get:
      tags: [Users]
      summary: Get all users (admin only)
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of users
  /api/projects:
    post:
      tags: [Projects]
      summary: Create a new project (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        201:
          description: Project created
    get:
      tags: [Projects]
      summary: Get all projects
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of projects
  /api/document-submissions:
    post:
      tags: [DocumentSubmissions]
      summary: Submit a new document (student or admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                phase_id:
                  type: integer
                file:
                  type: string
                  format: binary
                description:
                  type: string
      responses:
        201:
          description: Document submitted
    get:
      tags: [DocumentSubmissions]
      summary: Get all document submissions
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of document submissions
  /api/feedback-comments:
    post:
      tags: [FeedbackComments]
      summary: Add a feedback comment (supervisor or admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackComment'
      responses:
        201:
          description: Feedback comment added
    get:
      tags: [FeedbackComments]
      summary: Get all feedback comments
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of feedback comments
  /api/presentations:
    post:
      tags: [Presentations]
      summary: Schedule a new presentation (admin only)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: integer
                panel_id:
                  type: integer
                type:
                  type: string
                scheduled_date:
                  type: string
                  format: date-time
                venue:
                  type: string
                status:
                  type: string
      responses:
        201:
          description: Presentation scheduled
    get:
      tags: [Presentations]
      summary: Get all presentations
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of presentations 